{"version":3,"sources":["serviceWorker.js","action/projectAction.js","constants/actionsTypes.js","components/ProjectContainer/CreateProject.js","components/AppHeader/index.js","components/Cards/Card.js","components/Cards/index.js","components/Cards/CreateCards.js","components/Boards/Board.js","components/Boards/index.js","components/Boards/CreateBoard.js","components/ProjectContainer/index.js","Routing.js","main.js","store/projectManagerStore.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","createCard","projectName","boardName","cardDetails","dispatch","type","removeCard","CreateProject","props","React","useState","open","setOpen","value","setValue","handleClose","handleFormSubmit","e","preventDefault","onCreate","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","aria-describedby","onSubmit","DialogTitle","id","DialogContent","TextField","label","onChange","event","target","required","DialogActions","autoFocus","useStyles","makeStyles","theme","createStyles","root","flexGrow","main","marginTop","menuButton","marginRight","spacing","title","withRouter","connect","classes","className","AppBar","position","Toolbar","Typography","createProject","children","padding","cardsTitleContainer","display","alignItems","marginBottom","flex","Paper","onDragStart","dataTransfer","setData","JSON","stringify","draggable","gutterBottom","Tooltip","IconButton","aria-label","size","fontSize","description","state","projectManager","get","boards","toJS","cards","Grid","container","Object","keys","map","card","item","xs","key","CreateCard","setTitle","setDescription","margin","width","backgroundColor","palette","grey","boardTitleContainer","textAlign","board","onDragOver","onDrop","ev","cat","parse","getData","removeBoard","boardContainer","CreateBoard","paper","text","secondary","project","createBoard","App","path","middlewares","thunk","store","createStore","combineReducers","Immutable","Map","action","newState","set","getIn","setIn","compose","applyMiddleware","devToolsExtension","f","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.42cc137d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CREATE_PROJECT, CREATE_BOARD, REMOVE_BOARD, CREATE_CARD, REMOVE_CARD } from '../constants/actionsTypes';\n\nexport function createProject(projectName){\n  return dispatch=>{\n    dispatch({\n      type: CREATE_PROJECT,\n      projectName\n    })\n  }\n}\n\nexport function createBoard(projectName, boardName){\n  return dispatch=>{\n    dispatch({\n      type: CREATE_BOARD,\n      projectName, \n      boardName\n    })\n  }\n}\n\nexport function removeBoard(projectName, boardName){\n  return dispatch=>{\n    dispatch({\n      type: REMOVE_BOARD,\n      projectName, \n      boardName\n    })\n  }\n}\n\n\nexport function createCard(projectName, boardName, cardDetails){\n  return dispatch=>{\n    dispatch({\n      type: CREATE_CARD,\n      projectName, \n      boardName,\n      cardDetails\n    })\n  }\n}\n\nexport function removeCard(projectName, boardName, cardDetails){\n  return dispatch=>{\n    dispatch({\n      type: REMOVE_CARD,\n      projectName, \n      boardName,\n      cardDetails\n    })\n  }\n}","export const CREATE_PROJECT = 'create_project';\nexport const REMOVE_PROJECT = 'remove_project';\n\nexport const CREATE_BOARD = 'create_board';\nexport const REMOVE_BOARD = 'remove_board';\n\nexport const CREATE_CARD = 'create_card';\nexport const REMOVE_CARD = 'remove_card';","import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function CreateProject(props) {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Controlled');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFormSubmit=(e)=>{\n    e.preventDefault();\n    props.onCreate(value);\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n        Create Project\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <form onSubmit={handleFormSubmit}>\n          <DialogTitle id=\"alert-dialog-title\">{\"Enter Project Details\"}</DialogTitle>\n          <DialogContent>\n            <TextField id=\"outlined-basic\" label=\"Project Name\" variant=\"outlined\" onChange={handleChange} required/>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleFormSubmit} color=\"primary\">\n              Submit\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Cancel\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter } from 'react-router-dom';\nimport {createProject} from '../../action/projectAction';\nimport { connect } from 'react-redux';\nimport CreateProject from '../ProjectContainer/CreateProject';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    main:{\n      marginTop: \"48px\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst AppHeader = (props)=>{\n  const classes = useStyles();\n\n  const _createProject=(projectName)=>{\n    props.dispatch(createProject(projectName))\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" className={classes.title}>\n            Kanban Project Management board\n          </Typography>\n          <div>\n            <CreateProject onCreate={_createProject}/>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.main}>\n        {props.children}\n      </main>\n    </div>\n  );\n}\n\nexport default withRouter(connect()(AppHeader));","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { connect } from 'react-redux';\nimport { removeCard } from '../../action/projectAction';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"5px\"\n  },\n  cardsTitleContainer:{\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"5px\",\n\n    \"& .cardTitle\":{\n      flex:\"1 auto\"\n    }\n  },\n}));\n\nfunction Card(props){\n  const classes = useStyles();\n  const {cardDetails, boardName, projectName} = props;\n\n  const onDragStart = (e, id)=>{\n    e.dataTransfer.setData(\"id\", id);\n  }\n\n  return (\n    <Paper className={classes.root} onDragStart={(e)=>onDragStart(e, JSON.stringify({cardDetails, boardName}))} draggable>\n      <div className={classes.cardsTitleContainer}>\n        <Typography variant=\"subtitle1\" gutterBottom className=\"cardTitle\">\n          {cardDetails.title}\n        </Typography>\n        <div>\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"more\" size=\"small\" onClick={()=>{props.dispatch(removeCard(projectName, boardName, cardDetails))}}>\n              <DeleteIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n\n      <Typography variant=\"subtitle2\" gutterBottom>\n        {cardDetails.description}\n      </Typography>\n    </Paper>\n  );\n}\n\nexport default connect()(Card);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from './Card';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nfunction Cards(props){\n  const classes = useStyles();\n  const {boards, boardName, projectName} = props;\n  const cards = (boards[boardName] && boards[boardName].cards) || {};\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        {\n          (Object.keys(cards)||[]).map(card=>{\n            return (\n              <Grid item xs={12} key={card}>\n                <Card cardDetails={cards[card]} boardName={boardName} projectName={projectName}/>\n              </Grid>\n            )\n          })\n        }\n      </Grid>\n    </div>\n  );\n}\n\nexport default connect(state=>{\n  const projectName = state.projectManager.get(\"projectName\");\n  const project = (state.projectManager && state.projectManager.get(projectName) && state.projectManager.get(projectName).toJS()) || {};\n  const boards = project.boards || {};\n\n  return {\n    projectName,\n    boards\n  };\n})(Cards);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\n\nexport default function CreateCard(props) {\n  const [open, setOpen] = React.useState(false);\n  const [title, setTitle] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFormSubmit=(e)=>{\n    e.preventDefault();\n    props.onCreate({title, description});\n    handleClose();\n  }\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Create Card\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <form onSubmit={handleFormSubmit}>\n          <DialogTitle id=\"alert-dialog-title\">{\"Enter Card Details\"}</DialogTitle>\n          <DialogContent>\n            <TextField id=\"outlined-basic\" label=\"Card Title\" variant=\"outlined\" onChange={handleTitleChange} required/>\n            <TextField id=\"outlined-basic\" label=\"Card Description\" variant=\"outlined\" onChange={handleDescriptionChange} required/>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleFormSubmit} color=\"primary\">\n              Submit\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Cancel\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Cards from '../Cards';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport {createCard, removeCard, removeBoard} from '../../action/projectAction';\nimport CreateCard from '../Cards/CreateCards';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"12px\",\n    margin:\"0 5px\",\n    width: \"320px\",\n    backgroundColor: theme.palette.grey[200]\n  },\n  boardTitleContainer:{\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"5px\",\n\n    \"& .boardTitle\":{\n      flex:\"1 auto\"\n    }\n  },\n  createCard:{\n    textAlign: \"center\",\n    marginTop: \"20px\"\n  }\n}));\n\nfunction Board(props){\n  const classes = useStyles();\n  const {board, projectName} = props;\n\n  const _createCard=(cardDetails)=>{\n    const {dispatch, projectName, board} = props;\n    dispatch(createCard(projectName, board.boardName, cardDetails))\n  }\n\n  const onDragOver = (e)=>{\n    e.preventDefault()\n  }\n\n  const onDrop = (ev, cat) => {\n    const {cardDetails, boardName} = JSON.parse(ev.dataTransfer.getData(\"id\"));\n    const {dispatch, projectName, board} = props;\n    dispatch(createCard(projectName, board.boardName, cardDetails));\n    dispatch(removeCard(projectName, boardName, cardDetails))\n  }\n\n  return (\n    <Paper className={classes.root} onDragOver={(e)=>onDragOver(e)} onDrop={(e)=>onDrop(e)}>\n      <div className={classes.boardTitleContainer}>\n        <Typography variant=\"subtitle1\" gutterBottom className=\"boardTitle\">\n          {board.boardName}\n        </Typography>\n        <div>\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"more\" size=\"small\" onClick={()=>{props.dispatch(removeBoard(projectName, board.boardName))}}>\n              <DeleteIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n\n      <Cards boardName={board.boardName} />\n      <div className={classes.createCard}>\n        <CreateCard onCreate={_createCard}/>\n      </div>\n    </Paper>\n  );\n}\n\nexport default connect(state=>{\n  return {\n    projectName : state.projectManager.get(\"projectName\")\n  };\n})(Board);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Board from './../Boards/Board';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  boardContainer: {\n    display: \"flex\",\n  }\n}));\n\nfunction Boards(props){\n  const classes = useStyles();\n  const {boards} = props;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.boardContainer}>\n        {\n          (Object.keys(boards)||[]).map((board)=>{\n            return(\n              <Board board={boards[board]} key={board}/>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default connect(state=>{\n  const projectName = state.projectManager.get(\"projectName\");\n  const project = (state.projectManager && state.projectManager.get(projectName) && state.projectManager.get(projectName).toJS()) || {};\n  const boards = project.boards || {};\n\n  return {\n    boards\n  };\n})(Boards);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\n\nexport default function CreateBoard(props) {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Controlled');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFormSubmit=(e)=>{\n    e.preventDefault();\n    props.onCreate(value);\n    handleClose();\n  }\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Create Board\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <form onSubmit={handleFormSubmit}>\n          <DialogTitle id=\"alert-dialog-title\">{\"Enter Project Details\"}</DialogTitle>\n          <DialogContent>\n            <TextField id=\"outlined-basic\" label=\"Project Board\" variant=\"outlined\" onChange={handleChange} required/>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleFormSubmit} color=\"primary\">\n              Submit\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Cancel\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Boards from \"../Boards\";\nimport { connect } from 'react-redux';\nimport { Typography } from '@material-ui/core';\nimport CreateBoard from '../Boards/CreateBoard';\nimport {createBoard} from '../../action/projectAction';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"12px\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  boardContainer:{\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: \"5px\",\n\n    \"& .boardTitle\":{\n      flex:\"1 auto\"\n    }\n  }\n}));\n\nfunction ProjectContainer(props){\n  const classes = useStyles();\n  const {projectName} = props;\n\n  const _createBoard=(boardName)=>{\n    props.dispatch(createBoard(props.projectName, boardName))\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <div className={classes.boardContainer}>\n            <Typography variant=\"subtitle1\" gutterBottom className=\"boardTitle\">\n              Project Name : {projectName}\n            </Typography>\n            <div>\n              <CreateBoard onCreate={_createBoard}/>\n            </div>\n          </div>\n\n          <Boards/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default connect(state=>{\n  return {\n    projectName : state.projectManager.get(\"projectName\"),\n    project:state.projectManager.toJS()\n  };\n})(ProjectContainer);","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport AppHeader from \"./components/AppHeader\";\nimport ProjectContainer from \"./components/ProjectContainer\";\n\nexport default function App() {\n  return (\n    <Router>\n        <Switch>\n          <AppHeader>\n            <Route path=\"/\">\n              <ProjectContainer/>\n            </Route>\n          </AppHeader>\n        </Switch>\n    </Router>\n  );\n}","import {createStore, combineReducers, compose, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport projectManager from './store/projectManagerStore';\n\nconst middlewares = [thunk];\n\nconst store = createStore(\n\tcombineReducers({\n    projectManager\n  }),\n\tcompose(\n    applyMiddleware(...middlewares),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )\n)\n\nexport default store;","import * as actionTypes from '../constants/actionsTypes';\nimport Immutable from \"immutable\";\n\nexport default function projectManager(state = Immutable.Map({}), action) {\n    let newState = {}, projectName='', boardName='', boards={}, cardDetails={}, cards={};\n    switch(action.type){\n        case actionTypes.CREATE_PROJECT:\n            newState = state;\n            projectName = action.projectName;\n            newState = state.set(\"projectName\", projectName);\n            return newState;\n\n        case actionTypes.CREATE_BOARD:\n            newState = state;\n            projectName = action.projectName;\n            boardName = action.boardName;\n            \n            boards = state.getIn([projectName, \"boards\"]) || {};\n            boards[boardName] = {...boards[boardName], ...{boardName}};\n            newState = state.setIn([projectName, \"boards\"], {...boards});\n\n            return newState;\n            \n        case actionTypes.REMOVE_BOARD:\n            newState = state;\n            projectName = action.projectName;\n            boardName = action.boardName;\n            \n            boards = state.getIn([projectName, \"boards\"]) || {};\n            delete boards[boardName];\n            \n            newState = state.setIn([projectName, \"boards\"], {...boards});\n\n            return newState;\n\n        case actionTypes.CREATE_CARD:\n            newState = state;\n            projectName = action.projectName;\n            boardName = action.boardName;\n            cardDetails = action.cardDetails;\n\n            boards = state.getIn([projectName, \"boards\"]) || {};\n            cards = (boards[boardName] && boards[boardName].cards)||{};\n            cards[cardDetails.title] = cardDetails;\n\n            boards[boardName] = {...boards[boardName], ...{cards}};\n\n            newState = newState.setIn([projectName, \"boards\"], {...boards});\n            return newState;\n        \n        case actionTypes.REMOVE_CARD:\n            newState = state;\n            projectName = action.projectName;\n            boardName = action.boardName;\n            cardDetails = action.cardDetails;\n\n            boards = state.getIn([projectName, \"boards\"]) || {};\n            cards = (boards[boardName] && boards[boardName].cards)||{};\n            \n            delete cards[cardDetails.title];\n\n            boards[boardName] = {...boards[boardName], ...{cards}};\n\n            newState = newState.setIn([projectName, \"boards\"], {...boards});\n            return newState;\n    \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport {Provider} from \"react-redux\";\nimport Routing from './Routing';\nimport store from './main';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routing/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}